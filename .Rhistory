library(tidyverse)
c <-read.csv("icu/inputevents.csv")
b <-read.csv("icu/outputevents.csv")
View(b)
View(c)
library(readr)
CONCEPT <- read_csv("Voca/CONCEPT.csv")
View(CONCEPT)
# Assuming your dataframe is named df and the string you are searching for is "target_string"
target_string <- "Aspirin"
# Check if the target string exists in the dataframe
string_exists <- any(apply(CONCEPT, 1, function(row) any(grepl(target_string, row))))
# Print result
if(string_exists) {
print(paste("The string", target_string, "exists in the dataframe."))
} else {
print(paste("The string", target_string, "does not exist in the dataframe."))
}
# Find rows that contain the target string
rows_with_string <- apply(CONCEPT, 1, function(row) any(grepl(target_string, row)))
# Subset the original dataframe to keep only rows where the string exists
target_dataframe <- CONCEPT[rows_with_string, ]
View(target_dataframe)
View(CONCEPT)
View(CONCEPT)
library(readr)
CONCEPT <- read_delim("Voca/CONCEPT.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(CONCEPT)
# Assuming your dataframe is named df and the string you are searching for is "target_string"
target_string <- "Aspirin"
# Find rows that contain the target string
rows_with_string <- apply(CONCEPT, 1, function(row) any(grepl(target_string, row)))
# Subset the original dataframe to keep only rows where the string exists
target_dataframe <- CONCEPT[rows_with_string, ]
# Assuming your dataframe is named df and the string you are searching for is "target_string"
target_string <- "Aspirin"
target_string <- "Aspirin"
library(tidyverse)
# Assuming your dataframe is named df and the string you are searching for is "target_string"
target_string <- "Aspirin"
target_string <- "Aspirin"
# Find rows that contain the target string
rows_with_string <- apply(CONCEPT, 1, function(row) any(grepl(target_string, row)))
# Subset the original dataframe to keep only rows where the string exists
target_dataframe <- CONCEPT[rows_with_string, ]
View(target_dataframe)
library(readr)
pharmacy <- read_csv("hosp/pharmacy.csv")
View(pharmacy)
rows_with_string <- apply(pharmacy, 1, function(row) any(grepl(target_string, row)))
aspirine_pharmacy <- pharmacy[rows_with_string, ]
View(aspirine_pharmacy)
unique_values <- unique(pharmacy$medication)
print(unique_values)
View(CONCEPT)
View(CONCEPT)
target_string <- "1127078"
target_concept <- CONCEPT[rows_with_string, ]
rows_with_string <- apply(CONCEPT, 1, function(row) any(grepl(target_string, row)))
target_concept <- CONCEPT[rows_with_string, ]
View(target_concept)
View(target_concept)
library(readr)
drug_exposure <- read_csv("omop tables/drug_exposure.csv")
View(drug_exposure)
#Créer un drug_exposure_temp
drug_exposure_temp <- drug_exposure[FALSE, ]
View(drug_exposure_temp)
View(drug_exposure)
pharmacy_selected <- pharmacy[, c("subject_id", "hadm_id", "pharmacy_id", "starttime", "stoptime", "medication")]
View(pharmacy_selected)
pharmacy_clean <- na.omit(pharmacy_selected)
View(pharmacy_clean)
pharmacy_clean1 <- pharmacy_clean
pharmacy_clean1$starttime <- as.character(pharmacy_clean1$starttime)
# Convertir la colonne starttime au format de date souhaité
pharmacy_clean1$starttime <- as.Date(pharmacy_clean1$starttime)
# Afficher le résultat
print(pharmacy_clean1$starttime)
View(pharmacy_clean1)
#pharmacy_stoptime
pharmacy_clean1$stoptime <- as.character(pharmacy_clean1$stoptime)
pharmacy_clean1$stoptime <- as.Date(pharmacy_clean1$stoptime)
#travail sur medication
pharmacy_clean1 <- pharmacy_clean[!pharmacy_clean$medication %in% c(1, 2), ]
unique_medication <- unique(pharmacy_clean1$medication)
# Créer un nouveau dataframe avec ces valeurs uniques
unique_medication_df <- data.frame(medication = unique_medication)
View(unique_medication_df)
View(CONCEPT)
View(CONCEPT)
CONCEPT_drug_only <- CONCEPT[CONCEPT$domain_id == "Drug", ]
View(CONCEPT_drug_only)
View(unique_medication_df)
write.csv(unique_medication_df, file = "unique_medication")
medication_map <- read_csv("medication_map.csv")
View(medication_map)
final_medication_map <- medication_map[, c("source_code_description", "target_concept_id")]
View(final_medication_map)
View(pharmacy_clean1)
View(pharmacy_clean1)
pharmacy_clean2 <- pharmacy_clean1 %>%
left_join(final_medication_map, by = c("medication" = "source_code_description")) %>%
# Selecting necessary columns and renaming the target_concept_id to medication
select(-medication, medication = target_concept_id)
View(pharmacy_clean2)
View(drug_exposure)
View(drug_exposure_temp)
#remplir le df drug exposure
print(names(drug_exposure_temp))
pharmacy_clean1$starttime <- as.character(pharmacy_clean1$starttime)
# Convertir la colonne starttime au format de date souhaité
pharmacy_clean1$starttime <- as.Date(pharmacy_clean1$starttime)
#pharmacy_stoptime
pharmacy_clean1$stoptime <- as.character(pharmacy_clean1$stoptime)
pharmacy_clean1$stoptime <- as.Date(pharmacy_clean1$stoptime)
#travail sur medication
pharmacy_clean1 <- pharmacy_clean1[!pharmacy_clean1$medication %in% c(1, 2), ]
unique_medication <- unique(pharmacy_clean1$medication)
# Créer un nouveau dataframe avec ces valeurs uniques
unique_medication_df <- data.frame(medication = unique_medication)
write.csv(unique_medication_df, file = "unique_medication")
CONCEPT_drug_only <- CONCEPT[CONCEPT$domain_id == "Drug", ]
medication_map <- read_csv("medication_map.csv")
final_medication_map <- medication_map[, c("source_code_description", "target_concept_id")]
pharmacy_clean2 <- pharmacy_clean1 %>%
left_join(final_medication_map, by = c("medication" = "source_code_description")) %>%
# Selecting necessary columns and renaming the target_concept_id to medication
select(-medication, medication = target_concept_id)
drug_exposure_temp$person_id <- pharmacy_clean2$subject_id
if(nrow(drug_exposure_temp) == 0) {
drug_exposure_temp <- drug_exposure_temp[seq_len(nrow(pharmacy_clean2)), ]
}
drug_exposure_temp$person_id <- pharmacy_clean2$subject_id
drug_exposure_temp$visit_occurence_id <- pharmacy_clean2$hadm_id
drug_exposure_temp$drug_exposure_id <- pharmacy_clean2$pharmacy_id
drug_exposure_temp$drug_exposure_start_date <- pharmacy_clean2$starttime
drug_exposure_temp$drug_exposure_end_date <- pharmacy_clean2$stoptime
drug_exposure_temp$drug_source_concept_id <- pharmacy_clean2$medication
View(drug_exposure)
drug_exposure_temp$drug_exposure_start_date_time <- drug_exposure_temp$drug_exposure_start_date
print(head(drug_exposure_temp))
drug_exposure_temp <- drug_exposure_temp %>%
mutate(drug_exposure_start_date_time = drug_exposure_start_date)
drug_exposure_temp <- drug_exposure_temp %>%
mutate(drug_exposure_start_datetime = drug_exposure_start_date)
drug_exposure_temp <- drug_exposure_temp[, -ncol(drug_exposure_temp)]
#Créer un drug_exposure_temp
drug_exposure_temp <- drug_exposure[FALSE, ]
if(nrow(drug_exposure_temp) == 0) {
drug_exposure_temp <- drug_exposure_temp[seq_len(nrow(pharmacy_clean2)), ]
}
drug_exposure_temp$person_id <- pharmacy_clean2$subject_id
drug_exposure_temp$visit_occurence_id <- pharmacy_clean2$hadm_id
drug_exposure_temp$drug_exposure_id <- pharmacy_clean2$pharmacy_id
drug_exposure_temp$drug_exposure_start_date <- pharmacy_clean2$starttime
drug_exposure_temp$drug_exposure_end_date <- pharmacy_clean2$stoptime
drug_exposure_temp$drug_source_concept_id <- pharmacy_clean2$medication
drug_exposure_temp <- drug_exposure_temp %>%
mutate(drug_exposure_start_datetime = drug_exposure_start_date) %>%
mutate(drug_exposure_end_datetime = drug_exposure_end_date)
drug_exposure_temp <- drug_exposure_temp %>%
mutate(drug_exposure_start_datetime = drug_exposure_start_date) %>%
mutate(drug_exposure_end_datetime = drug_exposure_end_date) %>%
mutate(drug_concept_id = drug_source_concept_id)
common_columns <- intersect(names(drug_exposure_temp), names(drug_exposure))
# Subset drug_exposure_temp to only include the common columns
drug_exposure_temp <- drug_exposure_temp[, common_columns]
drug_exposure_temp$visit_occurence_id <- pharmacy_clean2$hadm_id
drug_exposure_temp <- drug_exposure[FALSE, ]
if(nrow(drug_exposure_temp) == 0) {
drug_exposure_temp <- drug_exposure_temp[seq_len(nrow(pharmacy_clean2)), ]
}
drug_exposure_temp$person_id <- pharmacy_clean2$subject_id
drug_exposure_temp$visit_occurrence_id <- pharmacy_clean2$hadm_id
drug_exposure_temp$drug_exposure_id <- pharmacy_clean2$pharmacy_id
drug_exposure_temp$drug_exposure_start_date <- pharmacy_clean2$starttime
drug_exposure_temp$drug_exposure_end_date <- pharmacy_clean2$stoptime
drug_exposure_temp$drug_source_concept_id <- pharmacy_clean2$medication
drug_exposure_temp <- drug_exposure_temp %>%
mutate(drug_exposure_start_datetime = drug_exposure_start_date) %>%
mutate(drug_exposure_end_datetime = drug_exposure_end_date) %>%
mutate(drug_concept_id = drug_source_concept_id)
common_columns <- intersect(names(drug_exposure_temp), names(drug_exposure))
write.csv(drug_exposure_temp, file = "drug_exposure_mapped")
write.csv(drug_exposure_temp, file = "drug_exposure_mapped.csv")
library(readr)
drug_exposure_mapped <- read_csv("drug_exposure_mapped.csv")
View(drug_exposure_mapped)
View(drug_exposure_mapped)
View(drug_exposure_temp)
View(pharmacy)
labevents <-read.csv("hosp/labevents.csv")
View(labevents)
unique_values <- unique(labevents$itemid)
unique_values
labevents1 <- labevents.drop_duplicates(subset="itemid")
labevents1 <- labevents %>%
distinct(itemid, .keep_all = TRUE)
labevents1 <- labevents %>%
distinct(itemid, .keep_all = TRUE)
library(tidyverse)
labevents1 <- labevents %>%
distinct(itemid, .keep_all = TRUE)
View(labevents1)
write.csv(labevents, file = "labevents_usagi.csv")
labevents1 <- labevents1 %>%
select(c(itemid,specimen_id))
write.csv(labevents, file = "labevents_usagi1.csv")
write.csv(labevents1, file = "labevents_usagi1.csv")
labevents <-read.csv("hosp/d_labevents.csv")
labevents <-read.csv("hosp/d_labitems.csv")
####LAB events####
labevents <-read.csv("hosp/labevents.csv")
####LAB events####
labevents <-read.csv("hosp/labevents.csv")
labitems <-read.csv("hosp/d_labitems.csv")
View(labitems)
labevents1 <- labevents %>%
distinct(itemid, .keep_all = TRUE)
labevents1 <- labevents1 %>%
select(c(itemid,specimen_id))
labevents1 <- labevents1 %>%
select(c(itemid))
resultat <- inner_join(labevents1, labitems, by = "itemid")
View(resultat)
write.csv(resultat, file = "labevents_usagi2.csv")
lab_dico <- read.csv("lab_dico.csv")
View(lab_dico)
library(tidyverse)
library(tidyverse)
#Créer un drug_exposure_temp
drug_exposure_temp <- drug_exposure[FALSE, ]
pharmacy <- read.csv("drug_exposure/pharmacy.csv")
#importer la table drug_exposure OMOP exportée depuis DBeaver
drug_exposure <- read.csv("drug_exposure/drug_exposure.csv")
#Créer un drug_exposure_temp vide (sans ses lignes en ne gardant que les colonnes)
drug_exposure_temp <- drug_exposure[FALSE, ]
View(drug_exposure_temp)
View(drug_exposure)
#On selectionne les colonnes à garder dans la table pharmacy et on supprime les rows avec des NA
pharmacy_selected <- pharmacy[, c("subject_id", "hadm_id", "pharmacy_id", "starttime", "stoptime", "medication")]
pharmacy_clean <- na.omit(pharmacy_selected)
View(pharmacy_clean)
View(pharmacy_selected)
View(pharmacy_clean)
View(pharmacy_selected)
pharmacy_clean[7]
pharmacy_clean[:7]
pharmacy_clean[7,]
pharmacy_clean$medication[7,]
pharmacy_clean$medication[7]
View(pharmacy_selected)
pharmacy_clean <- pharmacy_clean[rowSums(pharmacy_clean == "") == 0, ]
View(pharmacy_clean)
#Travail sur la colonne medication pour avoir une source de données pour Usagi
unique_medication <- unique(pharmacy_clean$medication)
# Créer un nouveau dataframe avec ces valeurs uniques
unique_medication_df <- data.frame(medication = unique_medication)
write.csv(unique_medication_df, file = "unique_medication")
View(unique_medication_df)
# Créer un nouveau dataframe avec ces valeurs uniques
unique_medication_df <- data.frame(medication = unique_medication)
write.csv(unique_medication_df, file = "drug_exposure/unique_medication.csv")
#Après un long mapping sur Usagi on importe drugs_map.csv
drugs_map <- read.csv("drug_exposure/drugs_map.csv")
View(drugs_map)
#Après un long mapping sur Usagi on importe drugs_map.csv
drugs_map <- read.csv("drug_exposure/drugs_map.csv")
#On ne garde que les colonnes qui nous intéressent à savoir les valeurs dans pharmacy et les concept_id OMOP
drugs_map <- drugs_map[, c("source_code_description", "target_concept_id")]
pharmacy_clean2 <- pharmacy_clean %>%
left_join(final_medication_map, by = c("medication" = "source_code_description")) %>%
# Selecting necessary columns and renaming the target_concept_id to medication
select(-medication, medication = target_concept_id)
pharmacy_clean2 <- pharmacy_clean %>%
left_join(drugs_map, by = c("medication" = "source_code_description")) %>%
# Selecting necessary columns and renaming the target_concept_id to medication
select(-medication, medication = target_concept_id)
View(pharmacy_clean2)
#remplir maintenant drug_exposure_temp
#on s'assure d'avoir le même nombre de rows
if(nrow(drug_exposure_temp) == 0) {
drug_exposure_temp <- drug_exposure_temp[seq_len(nrow(pharmacy_clean2)), ]
}
#On remplit les colonnes avec celles qui leur correspondent dans pharmacy
drug_exposure_temp$person_id <- pharmacy_clean2$subject_id
drug_exposure_temp$visit_occurrence_id <- pharmacy_clean2$hadm_id
drug_exposure_temp$drug_exposure_id <- pharmacy_clean2$pharmacy_id
drug_exposure_temp$drug_exposure_start_date <- pharmacy_clean2$starttime
drug_exposure_temp$drug_exposure_end_date <- pharmacy_clean2$stoptime
drug_exposure_temp$drug_source_concept_id <- pharmacy_clean2$medication
drug_exposure_temp <- drug_exposure_temp %>%
mutate(drug_exposure_start_datetime = drug_exposure_start_date) %>%
mutate(drug_exposure_end_datetime = drug_exposure_end_date) %>%
mutate(drug_concept_id = drug_source_concept_id)
#32849 pour drug_type_concept_id
drug_exposure_temp$drug_type_concept_id <- 32849
write.csv(drug_exposure_temp, file = "drug_exposure/drug_exposure_mapped.csv")
poc <- read.csv("drug_exposure/drug_exposure_mapped.csv")
write.csv(drug_exposure_temp, file = "drug_exposure/drug_exposure_mapped.csv" ,row.names = FALSE)
poc <- read.csv("drug_exposure/drug_exposure_mapped.csv")
View(drug_exposure_temp)
drug_exposure_temp <- drug_exposure_temp %>%
mutate_all(~ ifelse(. == "NA", NA, .))
drug_exposure_temp$sig[drug_exposure_temp$sig == "NA"] <- NULL
write.csv(drug_exposure_temp, file = "drug_exposure/drug_exposure_mapped.csv" ,row.names = FALSE)
View(poc)
poc <- read.csv("drug_exposure/drug_exposure_mapped1.csv")
write.csv(drug_exposure_temp, file = "drug_exposure/drug_exposure_mapped1.csv" ,row.names = FALSE)
poc <- read.csv("drug_exposure/drug_exposure_mapped1.csv")
View(poc)
drug_exposure_temp <- drug_exposure_temp %>%
mutate_all(~ ifelse(. == "", NA, .))
drug_exposure_temp <- drug_exposure_temp %>%
mutate_all(~ ifelse(. == "NA", "", .))
write.csv(drug_exposure_temp, file = "drug_exposure/drug_exposure_mapped.csv", na = "NULL", row.names = FALSE)
View(drug_exposure_temp)
drug_exposure_temp[drug_exposure_temp == "NA"] <- ""
# Save the CSV file
write.csv(drug_exposure_temp, file = "drug_exposure/drug_exposure_mapped.csv", na = "", row.names = FALSE)
gc()
